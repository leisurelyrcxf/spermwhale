syntax = "proto3";

package proto;

import "common.proto";

option go_package = "proto/txnpb";

enum TxnState {
    StateInvalid     = 0;
    StateUncommitted = 1;
    StateStaging     = 2;
    StateCommitted   = 3;
    StateRollbacking = 4;
    StateRollbacked  = 5;
}

message TxnSnapshotReadOption {
    uint64 snapshot_version = 1;
    uint64 min_allowed_snapshot_version = 2;
    uint32 flag = 3;
}

message TxnOption {
    uint32 type = 1;
    TxnSnapshotReadOption snapshot_read_option = 2;
}

message Txn {
    uint64 id = 1;
    uint32 type = 2;
    TxnState state = 3;
    TxnSnapshotReadOption snapshot_read_option = 4;
}

message TValue {
    Value value = 1;
    uint64 snapshot_version = 2;
}

message BeginRequest {
    TxnOption opt = 1;
}

message BeginResponse {
    Error err = 1;
    Txn txn = 2;
}

message TxnGetRequest {
    string key = 1;
    uint64 txn_id = 2;
}

message TxnGetResponse {
    Error err = 1;
    TValue t_value = 2;
    Txn txn = 3;
}

message TxnMGetRequest {
    repeated string keys = 1;
    uint64 txn_id = 2;
}

message TxnMGetResponse {
    Error err = 1;
    repeated TValue t_values = 2;
    Txn txn = 3;
}

message TxnSetRequest {
    string key = 1;
    bytes value = 2;
    uint64 txn_id = 3;
}

message TxnSetResponse {
    Error err = 1;
    Txn txn = 2;
}

message TxnMSetRequest {
    repeated string keys = 1;
    repeated bytes values = 2;
    uint64 txn_id = 3;
}

message TxnMSetResponse {
    Error err = 1;
    Txn txn = 2;
}

message RollbackRequest {
    uint64 txn_id = 1;
}

message RollbackResponse {
    Error err = 1;
    Txn txn = 2;
}

message CommitRequest {
    uint64 txn_id = 1;
}

message CommitResponse {
    Error err = 1;
    Txn txn = 2;
}

service TxnService {
    rpc Begin(BeginRequest) returns (BeginResponse) {}
    rpc Get(TxnGetRequest) returns (TxnGetResponse) {}
    rpc MGet(TxnMGetRequest) returns (TxnMGetResponse) {}
    rpc Set(TxnSetRequest) returns (TxnSetResponse) {}
    rpc MSet(TxnMSetRequest) returns (TxnMSetResponse) {}
    rpc Rollback(RollbackRequest) returns (RollbackResponse) {}
    rpc Commit(CommitRequest) returns (CommitResponse) {}
}