// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: kvcc.proto

package kvccpb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	commonpb "github.com/leisurelyrcxf/spermwhale/proto/commonpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type KVCCReadOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReaderVersion uint64 `protobuf:"varint,1,opt,name=reader_version,json=readerVersion,proto3" json:"reader_version,omitempty"`
	Flag          uint32 `protobuf:"varint,2,opt,name=flag,proto3" json:"flag,omitempty"`
	ExactVersion  uint64 `protobuf:"varint,3,opt,name=exact_version,json=exactVersion,proto3" json:"exact_version,omitempty"`
}

func (x *KVCCReadOption) Reset() {
	*x = KVCCReadOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvcc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KVCCReadOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KVCCReadOption) ProtoMessage() {}

func (x *KVCCReadOption) ProtoReflect() protoreflect.Message {
	mi := &file_kvcc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KVCCReadOption.ProtoReflect.Descriptor instead.
func (*KVCCReadOption) Descriptor() ([]byte, []int) {
	return file_kvcc_proto_rawDescGZIP(), []int{0}
}

func (x *KVCCReadOption) GetReaderVersion() uint64 {
	if x != nil {
		return x.ReaderVersion
	}
	return 0
}

func (x *KVCCReadOption) GetFlag() uint32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *KVCCReadOption) GetExactVersion() uint64 {
	if x != nil {
		return x.ExactVersion
	}
	return 0
}

type KVCCWriteOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flag uint32 `protobuf:"varint,1,opt,name=flag,proto3" json:"flag,omitempty"`
}

func (x *KVCCWriteOption) Reset() {
	*x = KVCCWriteOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvcc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KVCCWriteOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KVCCWriteOption) ProtoMessage() {}

func (x *KVCCWriteOption) ProtoReflect() protoreflect.Message {
	mi := &file_kvcc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KVCCWriteOption.ProtoReflect.Descriptor instead.
func (*KVCCWriteOption) Descriptor() ([]byte, []int) {
	return file_kvcc_proto_rawDescGZIP(), []int{1}
}

func (x *KVCCWriteOption) GetFlag() uint32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

type KVCCGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string          `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Opt *KVCCReadOption `protobuf:"bytes,2,opt,name=opt,proto3" json:"opt,omitempty"`
}

func (x *KVCCGetRequest) Reset() {
	*x = KVCCGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvcc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KVCCGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KVCCGetRequest) ProtoMessage() {}

func (x *KVCCGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvcc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KVCCGetRequest.ProtoReflect.Descriptor instead.
func (*KVCCGetRequest) Descriptor() ([]byte, []int) {
	return file_kvcc_proto_rawDescGZIP(), []int{2}
}

func (x *KVCCGetRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KVCCGetRequest) GetOpt() *KVCCReadOption {
	if x != nil {
		return x.Opt
	}
	return nil
}

type KVCCGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	V   *commonpb.ValueCC `protobuf:"bytes,1,opt,name=v,proto3" json:"v,omitempty"`
	Err *commonpb.Error   `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *KVCCGetResponse) Reset() {
	*x = KVCCGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvcc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KVCCGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KVCCGetResponse) ProtoMessage() {}

func (x *KVCCGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kvcc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KVCCGetResponse.ProtoReflect.Descriptor instead.
func (*KVCCGetResponse) Descriptor() ([]byte, []int) {
	return file_kvcc_proto_rawDescGZIP(), []int{3}
}

func (x *KVCCGetResponse) GetV() *commonpb.ValueCC {
	if x != nil {
		return x.V
	}
	return nil
}

func (x *KVCCGetResponse) GetErr() *commonpb.Error {
	if x != nil {
		return x.Err
	}
	return nil
}

type KVCCSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string           `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value *commonpb.Value  `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Opt   *KVCCWriteOption `protobuf:"bytes,3,opt,name=opt,proto3" json:"opt,omitempty"`
}

func (x *KVCCSetRequest) Reset() {
	*x = KVCCSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvcc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KVCCSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KVCCSetRequest) ProtoMessage() {}

func (x *KVCCSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvcc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KVCCSetRequest.ProtoReflect.Descriptor instead.
func (*KVCCSetRequest) Descriptor() ([]byte, []int) {
	return file_kvcc_proto_rawDescGZIP(), []int{4}
}

func (x *KVCCSetRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KVCCSetRequest) GetValue() *commonpb.Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *KVCCSetRequest) GetOpt() *KVCCWriteOption {
	if x != nil {
		return x.Opt
	}
	return nil
}

type KVCCSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *commonpb.Error `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *KVCCSetResponse) Reset() {
	*x = KVCCSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvcc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KVCCSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KVCCSetResponse) ProtoMessage() {}

func (x *KVCCSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kvcc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KVCCSetResponse.ProtoReflect.Descriptor instead.
func (*KVCCSetResponse) Descriptor() ([]byte, []int) {
	return file_kvcc_proto_rawDescGZIP(), []int{5}
}

func (x *KVCCSetResponse) GetErr() *commonpb.Error {
	if x != nil {
		return x.Err
	}
	return nil
}

var File_kvcc_proto protoreflect.FileDescriptor

var file_kvcc_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6b, 0x76, 0x63, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x70, 0x0a, 0x0e, 0x4b, 0x56, 0x43, 0x43, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x72, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c,
	0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x23,
	0x0a, 0x0d, 0x65, 0x78, 0x61, 0x63, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x65, 0x78, 0x61, 0x63, 0x74, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x25, 0x0a, 0x0f, 0x4b, 0x56, 0x43, 0x43, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x22, 0x4b, 0x0a, 0x0e, 0x4b, 0x56,
	0x43, 0x43, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27,
	0x0a, 0x03, 0x6f, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4b, 0x56, 0x43, 0x43, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x03, 0x6f, 0x70, 0x74, 0x22, 0x4f, 0x0a, 0x0f, 0x4b, 0x56, 0x43, 0x43, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x01, 0x76, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x43, 0x43, 0x52, 0x01, 0x76, 0x12, 0x1e, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x70, 0x0a, 0x0e, 0x4b, 0x56, 0x43, 0x43,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x28, 0x0a, 0x03, 0x6f, 0x70, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4b, 0x56, 0x43, 0x43, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x6f, 0x70, 0x74, 0x22, 0x31, 0x0a, 0x0f, 0x4b, 0x56,
	0x43, 0x43, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a,
	0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x03, 0x65, 0x72, 0x72, 0x32, 0x76, 0x0a,
	0x04, 0x4b, 0x56, 0x43, 0x43, 0x12, 0x36, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x15, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4b, 0x56, 0x43, 0x43, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4b, 0x56, 0x43, 0x43,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x36, 0x0a,
	0x03, 0x53, 0x65, 0x74, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4b, 0x56, 0x43,
	0x43, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4b, 0x56, 0x43, 0x43, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0e, 0x5a, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6b,
	0x76, 0x63, 0x63, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kvcc_proto_rawDescOnce sync.Once
	file_kvcc_proto_rawDescData = file_kvcc_proto_rawDesc
)

func file_kvcc_proto_rawDescGZIP() []byte {
	file_kvcc_proto_rawDescOnce.Do(func() {
		file_kvcc_proto_rawDescData = protoimpl.X.CompressGZIP(file_kvcc_proto_rawDescData)
	})
	return file_kvcc_proto_rawDescData
}

var file_kvcc_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_kvcc_proto_goTypes = []interface{}{
	(*KVCCReadOption)(nil),   // 0: proto.KVCCReadOption
	(*KVCCWriteOption)(nil),  // 1: proto.KVCCWriteOption
	(*KVCCGetRequest)(nil),   // 2: proto.KVCCGetRequest
	(*KVCCGetResponse)(nil),  // 3: proto.KVCCGetResponse
	(*KVCCSetRequest)(nil),   // 4: proto.KVCCSetRequest
	(*KVCCSetResponse)(nil),  // 5: proto.KVCCSetResponse
	(*commonpb.ValueCC)(nil), // 6: proto.ValueCC
	(*commonpb.Error)(nil),   // 7: proto.Error
	(*commonpb.Value)(nil),   // 8: proto.Value
}
var file_kvcc_proto_depIdxs = []int32{
	0, // 0: proto.KVCCGetRequest.opt:type_name -> proto.KVCCReadOption
	6, // 1: proto.KVCCGetResponse.v:type_name -> proto.ValueCC
	7, // 2: proto.KVCCGetResponse.err:type_name -> proto.Error
	8, // 3: proto.KVCCSetRequest.value:type_name -> proto.Value
	1, // 4: proto.KVCCSetRequest.opt:type_name -> proto.KVCCWriteOption
	7, // 5: proto.KVCCSetResponse.err:type_name -> proto.Error
	2, // 6: proto.KVCC.Get:input_type -> proto.KVCCGetRequest
	4, // 7: proto.KVCC.Set:input_type -> proto.KVCCSetRequest
	3, // 8: proto.KVCC.Get:output_type -> proto.KVCCGetResponse
	5, // 9: proto.KVCC.Set:output_type -> proto.KVCCSetResponse
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_kvcc_proto_init() }
func file_kvcc_proto_init() {
	if File_kvcc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kvcc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KVCCReadOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvcc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KVCCWriteOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvcc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KVCCGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvcc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KVCCGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvcc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KVCCSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvcc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KVCCSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kvcc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kvcc_proto_goTypes,
		DependencyIndexes: file_kvcc_proto_depIdxs,
		MessageInfos:      file_kvcc_proto_msgTypes,
	}.Build()
	File_kvcc_proto = out.File
	file_kvcc_proto_rawDesc = nil
	file_kvcc_proto_goTypes = nil
	file_kvcc_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// KVCCClient is the client API for KVCC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KVCCClient interface {
	Get(ctx context.Context, in *KVCCGetRequest, opts ...grpc.CallOption) (*KVCCGetResponse, error)
	Set(ctx context.Context, in *KVCCSetRequest, opts ...grpc.CallOption) (*KVCCSetResponse, error)
}

type kVCCClient struct {
	cc grpc.ClientConnInterface
}

func NewKVCCClient(cc grpc.ClientConnInterface) KVCCClient {
	return &kVCCClient{cc}
}

func (c *kVCCClient) Get(ctx context.Context, in *KVCCGetRequest, opts ...grpc.CallOption) (*KVCCGetResponse, error) {
	out := new(KVCCGetResponse)
	err := c.cc.Invoke(ctx, "/proto.KVCC/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kVCCClient) Set(ctx context.Context, in *KVCCSetRequest, opts ...grpc.CallOption) (*KVCCSetResponse, error) {
	out := new(KVCCSetResponse)
	err := c.cc.Invoke(ctx, "/proto.KVCC/Set", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KVCCServer is the server API for KVCC service.
type KVCCServer interface {
	Get(context.Context, *KVCCGetRequest) (*KVCCGetResponse, error)
	Set(context.Context, *KVCCSetRequest) (*KVCCSetResponse, error)
}

// UnimplementedKVCCServer can be embedded to have forward compatible implementations.
type UnimplementedKVCCServer struct {
}

func (*UnimplementedKVCCServer) Get(context.Context, *KVCCGetRequest) (*KVCCGetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedKVCCServer) Set(context.Context, *KVCCSetRequest) (*KVCCSetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Set not implemented")
}

func RegisterKVCCServer(s *grpc.Server, srv KVCCServer) {
	s.RegisterService(&_KVCC_serviceDesc, srv)
}

func _KVCC_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KVCCGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVCCServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.KVCC/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVCCServer).Get(ctx, req.(*KVCCGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KVCC_Set_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KVCCSetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVCCServer).Set(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.KVCC/Set",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVCCServer).Set(ctx, req.(*KVCCSetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _KVCC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.KVCC",
	HandlerType: (*KVCCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _KVCC_Get_Handler,
		},
		{
			MethodName: "Set",
			Handler:    _KVCC_Set_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kvcc.proto",
}
